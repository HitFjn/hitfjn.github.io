<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>KMP</title>
    <url>/2022/09/23/KMP/</url>
    <content><![CDATA[<h1 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h1><p><img src="https://code-thinking.cdn.bcebos.com/gifs/KMP%E7%B2%BE%E8%AE%B21.gif" alt="KMP算法匹配流程"></p>
<h2 id="首先求出next数组（前缀表）"><a href="#首先求出next数组（前缀表）" class="headerlink" title="首先求出next数组（前缀表）"></a>首先求出next数组（前缀表）</h2><p><img src="https://code-thinking.cdn.bcebos.com/pics/KMP%E7%B2%BE%E8%AE%B28.png" alt="&quot;如图所示&quot;"></p>
<p>next数组存放的是每个子串的最长公共前后缀</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public int[] getNext(int[] next,String s)&#123;</span><br><span class="line">    next[0] = 0;</span><br><span class="line">    int j = 0;</span><br><span class="line">    for(int i=1;i&lt;s.length();i++)&#123;</span><br><span class="line">        while(j&gt;0&amp;&amp;s.charAt(i)!=s.charAt(j))&#123;</span><br><span class="line">            j = next[j-1];</span><br><span class="line">        &#125;</span><br><span class="line">        if(s.charAt(i)==s.charAt(j))</span><br><span class="line">            j++;</span><br><span class="line">        next[i] = j;</span><br><span class="line">    &#125;    </span><br><span class="line">    return next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="其次开始KMP匹配"><a href="#其次开始KMP匹配" class="headerlink" title="其次开始KMP匹配"></a>其次开始KMP匹配</h2><p><img src="https://code-thinking.cdn.bcebos.com/gifs/KMP%E7%B2%BE%E8%AE%B22.gif" alt="匹配流程"></p>
<p>当匹配失败时，模式串指针j就返回到next[j-1]</p>
<p>当匹配成功时，j++ i++</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public int KMP(String s,String t)&#123;</span><br><span class="line">    int[] next = new int[t.length()];</span><br><span class="line">    int j = 0;</span><br><span class="line">    for(int i=0;i&lt;s.length();i++)&#123;</span><br><span class="line">        while(j&gt;0&amp;&amp;s.charAt(i)!=t.charAt(j))&#123;</span><br><span class="line">            j = next[j-1];</span><br><span class="line">        &#125;</span><br><span class="line">        if(s.charAt(i)==t.charAt(j))&#123;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        if(j==t.length())&#123;</span><br><span class="line">            return i-t.length()+1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/09/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2022/09/21/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<p>hello markdown!</p>
</blockquote>
<blockquote>
<p>#这是一级标题<br>##二级标题<br>###三级标题<br>####四级标题<br>#####五级标题<br>######六级标题</p>
</blockquote>
<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr>
<p><strong>加粗文字</strong></p>
<p><em>斜体文字</em></p>
<p><em><strong>加粗斜体文字</strong></em></p>
<p><del>删除线文字</del></p>
<hr>
<blockquote>
<p>引用</p>
<blockquote>
<p>引用</p>
<blockquote>
<p>嵌套引用</p>
</blockquote>
</blockquote>
</blockquote>
<hr>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr>
<hr>
<p>图片语法：</p>
<blockquote>
<p>![图片alt] (图片地址 “图片title”)</p>
</blockquote>
<p>图片alt就是显示在图片下方的文字<br>图片title就是图片的标题，当鼠标移动到图片时显示的内容，可以不加</p>
<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.nga.178.com%2Fattachments%2Fmon_202108%2F30%2Fi2Q176-ch72ZwT1kShs-190.jpeg&refer=http%3A%2F%2Fimg.nga.178.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1666443474&t=bcfde03a4f2836f866c04f509135ab75" alt="原神我老公" title="托马"></p>
<hr>
<p>超链接</p>
<blockquote>
<p>![超链接名]  (超链接地址 “超链接”)</p>
</blockquote>
<p><img src="http://baidu.com/" alt="百度"><br><img src="https://www.jianshu.com/p/191d1e21f7ed/" alt="教程"></p>
<hr>
<p>列表<br>无序列表 - 列表内容 + 列表内容 * 列表内容</p>
<blockquote>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
</blockquote>
<hr>
<p>有序列表<br>语法：数字加点</p>
<ol>
<li>列表内容</li>
<li>列表内容</li>
<li>列表内容</li>
</ol>
<hr>
<p>代码</p>
<p>单行代码用一个反引号包起来</p>
<blockquote>
<p><code>public static void main()&#123;&#125;</code> </p>
</blockquote>
<p>代码块：代码之间用三个反引号包起来，且两边的反引号单独占一行</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;public static void main()&#123;</span><br><span class="line">   int a = 0;</span><br><span class="line">   int b = 0;</span><br><span class="line">   return a+b; </span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<p>表格</p>
<p>语法：</p>
<table>
<thead>
<tr>
<th>表头</th>
<th align="center">表头</th>
<th align="right">表头</th>
</tr>
</thead>
<tbody><tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
<tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
</tbody></table>
<hr>
<table>
<thead>
<tr>
<th>姓名</th>
<th align="center">技能</th>
<th align="right">排行</th>
</tr>
</thead>
<tbody><tr>
<td>刘备</td>
<td align="center">哭</td>
<td align="right">大哥</td>
</tr>
<tr>
<td>关羽</td>
<td align="center">打</td>
<td align="right">二哥</td>
</tr>
<tr>
<td>张飞</td>
<td align="center">骂</td>
<td align="right">三弟</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>knowledge_graph1</title>
    <url>/2022/09/27/knowledge-graph1/</url>
    <content><![CDATA[<h1 id="知识图谱学习笔记1"><a href="#知识图谱学习笔记1" class="headerlink" title="知识图谱学习笔记1"></a>知识图谱学习笔记1</h1><hr>
<h2 id="第一章-知识图谱概述"><a href="#第一章-知识图谱概述" class="headerlink" title="第一章 知识图谱概述"></a>第一章 知识图谱概述</h2><p>  知识图谱以结构化三元组形式表示实体和实体间的关系。 </p>
<p>  知识图谱G(实体集合，关系集合，三元组集合)</p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h3 id="1-1-知识图谱的类型"><a href="#1-1-知识图谱的类型" class="headerlink" title="1.1 知识图谱的类型"></a>1.1 知识图谱的类型</h3><pre><code>知识分为事实性知识和主观性知识。
事实性知识是确定的，不随状态的变化而变化的知识。例如：中华人民共和国的首都是北京。
主观性知识是某个人或群体的情感信息。例如：大部分人觉得苹果手机太贵了。
一般只讨论事实性知识。

知识也分为静态知识和动态知识。
静态知识是不随时间和空间变化的知识。例如某个人的出生日期。
动态知识指随时间或空间变化而变化的知识。例如：美国总统。

知识图谱可以划分为语言知识图谱，语言认知知识图谱，常识知识图谱，领域知识图谱和百科知识图谱。
语言知识图谱存储人类语言方面的知识（WordNet、HowNet）
常识知识图谱（Cyc、ConceptNet）
领域知识图谱（医疗知识图谱、音乐知识图谱等）
</code></pre>
<hr>
<h3 id="1-2-知识图谱的生命周期"><a href="#1-2-知识图谱的生命周期" class="headerlink" title="1.2 知识图谱的生命周期"></a>1.2 知识图谱的生命周期</h3><hr>
<h3 id="1-2-1-知识构建"><a href="#1-2-1-知识构建" class="headerlink" title="1.2.1 知识构建"></a>1.2.1 知识构建</h3><p>知识体系构建指采取什么方式表达知识。</p>
<pre><code>RDF(资源描述框架)：
资源：能够使用RDF表示的对象，包括实体、事件、概念等。
谓词：描述资源本身的特征和资源之间的关系。每一个谓词可以定义元知识。
陈述：RDF三元组&lt;主体，谓词，宾语&gt;。主体是被描述的资源，谓词表示主体的属性或主体和宾语的关系。宾语为属性值或者一个资源。
</code></pre>
<hr>
<h3 id="1-2-2-知识获取"><a href="#1-2-2-知识获取" class="headerlink" title="1.2.2 知识获取"></a>1.2.2 知识获取</h3><p>知识获取目标是从海量数据中通过信息抽取的方式获取知识。知识获取主要来源有结构化数据、半结构化数据和非结构化数据。</p>
<pre><code>结构化数据：百科词条。
半结构化数据：没有固定模板，结构松散。
非结构化：纯文本数据。
</code></pre>
<p>信息抽取</p>
]]></content>
      <tags>
        <tag>知识图谱学习笔记</tag>
      </tags>
  </entry>
</search>
